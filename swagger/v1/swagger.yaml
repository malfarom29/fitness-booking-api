---
swagger: '2.0'
info:
  title: API V1
  version: v1
securityDefinitions:
  bearerAuth:
    type: apiKey
    in: header
    name: Authorization
basePath: "/api"
paths:
  "/admin/activities":
    post:
      summary: Creates a new activity
      tags:
      - Activities
      security:
      - bearerAuth: []
      description: On this endpoint the admin is able to create a new activity
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: activity
        in: body
        schema:
          type: object
          properties:
            activity:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                mode:
                  type: string
                  enum:
                  - outdoor
                  - indoor
                  - virtual
              required:
              - name
              - mode
      responses:
        '201':
          description: New activity created
          examples:
            application/json:
              data:
                id: 115
                name: foo
                description: bar
                mode: outdoor
        '403':
          description: Forbidden
          examples:
            application/json:
              error:
                type: Forbidden Error
                message: You cannot perform this action
                details: {}
        '422':
          description: Missing properties or Invalid Values
          examples:
            application/json:
              error:
                type: Unprocessable entity
                message: Validation failed
                details:
                  name:
                  - can't be blank
    get:
      summary: List of activities
      tags:
      - Activities
      description: Shows a list of activities
      security:
      - bearerAuth: []
      produces:
      - application/json
      responses:
        '200':
          description: List of Activities
          examples:
            application/json:
              data: []
        '403':
          description: Forbidden
          examples:
            application/json:
              error:
                type: Forbidden Error
                message: You cannot perform this action
                details: {}
  "/admin/activities/{id}":
    parameters:
    - name: id
      in: path
      type: string
      required: true
    patch:
      summary: Updates an activity
      tags:
      - Activities
      description: It updates requested fields from an specific activity
      security:
      - bearerAuth: []
      consumes:
      - application/json
      parameters:
      - name: activity
        in: body
        schema:
          properties:
            activity:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                mode:
                  type: string
                  enum:
                  - outdoor
                  - indoor
                  - virtual
      responses:
        '200':
          description: Updated
          examples:
            application/json:
              data:
                id: 116
                name: new name
                description: Inventore consequatur voluptas. Earum ipsam eaque. Sint
                  dolores qui.
                mode: indoor
        '403':
          description: Forbidden
          examples:
            application/json:
              error:
                type: Forbidden Error
                message: You cannot perform this action
                details: {}
        '404':
          description: Not found
          examples:
            application/json:
              error:
                type: Record not found
                message: Activity with id = 0 wasn't found
                details: {}
    get:
      summary: Get an specific activity
      tags:
      - Activities
      description: Shows an specific activity
      security:
      - bearerAuth: []
      produces:
      - application/json
      responses:
        '200':
          description: Show activity
          examples:
            application/json:
              data:
                id: 119
                name: nulla
                description: Rerum amet autem. Officiis voluptatem consequatur. Itaque
                  odit eum.
                mode: indoor
                created_at: '2020-12-12T14:41:00.528-06:00'
                updated_at: '2020-12-12T14:41:00.528-06:00'
        '403':
          description: Forbidden
          examples:
            application/json:
              error:
                type: Forbidden Error
                message: You cannot perform this action
                details: {}
        '404':
          description: Not found
          examples:
            application/json:
              error:
                type: Record not found
                message: Activity with id = 0 wasn't found
                details: {}
  "/admin/schedule_activities":
    post:
      summary: Schedule an activity
      tags:
      - Activity Scheduling
      description: Schedule an activity to be available for clients
      security:
      - bearerAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: schedule_activity
        in: body
        schema:
          type: object
          properties:
            schedule_activity:
              properties:
                schedule_id:
                  type: integer
                activity_id:
                  type: integer
                seats:
                  type: integer
              required:
              - schedule_id
              - activity_id
              - seats
      responses:
        '200':
          description: Scheduled a new activity
          examples:
            application/json:
              data:
                id: 51
                schedule:
                  id: 67
                  begin_at: '2020-12-12T15:41:00.000-06:00'
                  finish_at: '2020-12-12T16:41:00.000-06:00'
                activity:
                  id: 122
                  name: consequatur
                  description: Sint enim numquam. Enim aut omnis. Debitis eligendi
                    voluptas.
                  mode: outdoor
                taken_seats: 0
                seats: 5
        '403':
          description: Forbidden
          examples:
            application/json:
              error:
                type: Forbidden Error
                message: You cannot perform this action
                details: {}
  "/admin/schedules":
    post:
      summary: Add a new schedule
      tags:
      - Schedules
      description: Add a schedule available for activities. This schedules may have
        many activities. For example, from 8AM to 10AM can be scheduled a swimming
        session and a boxing session
      security:
      - bearerAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: schedule
        in: body
        schema:
          type: object
          properties:
            schedule:
              type: object
              properties:
                begin_at:
                  type: string
                  format: date-time
                finish_at:
                  type: string
                  format: date-time
              required:
              - begin_at
              - finish_at
      responses:
        '200':
          description: Create a new schedule
          examples:
            application/json:
              data:
                id: 69
                begin_at: '2020-12-12T15:40:59.000-06:00'
                finish_at: '2020-12-12T17:40:59.000-06:00'
        '403':
          description: Forbidden
          examples:
            application/json:
              error:
                type: Forbidden Error
                message: You cannot perform this action
                details: {}
        '422':
          description: Invalid values
          examples:
            application/json:
              error:
                type: Unprocessable entity
                message: Validation failed
                details:
                  begin_at:
                  - must be greater than actual date
  "/client/schedule_activities":
    get:
      summary: List of schedules available
      tags:
      - - Clients
        - Activities
      security:
      - bearerAuth: []
      description: List of activities booked by the client
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              data: []
        '403':
          description: Forbidden
          examples:
            application/json:
              error:
                type: Forbidden Error
                message: You cannot perform this action
                details: {}
  "/client/schedule_activities/available":
    get:
      summary: List of schedules available
      tags:
      - - Clients
        - Activities
      security:
      - bearerAuth: []
      description: List of activities available to the client and that has not been
        booked by him/her. The activities already booked by the client, will not be
        shown
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              data: []
        '403':
          description: Forbidden
          examples:
            application/json:
              error:
                type: Forbidden Error
                message: You cannot perform this action
                details: {}
  "/client/schedule_activities/{id}/book":
    parameters:
    - name: id
      in: path
      type: string
      required: true
    post:
      summary: Book an activity
      tags:
      - Booking
      description: It books an activity to the user
      security:
      - bearerAuth: []
      produces:
      - application/json
      responses:
        '200':
          description: Activity booked
          examples:
            application/json:
              data:
              - id: 56
                schedule:
                  id: 74
                  begin_at: '2020-12-12T15:41:00.000-06:00'
                  finish_at: '2020-12-12T16:41:00.000-06:00'
                activity:
                  id: 128
                  name: quasi
                  description: Ipsam omnis id. Est temporibus earum. Modi id earum.
                  mode: indoor
                taken_seats: 1
                seats: 13
        '403':
          description: Forbidden
          examples:
            application/json:
              error:
                type: Forbidden Error
                message: You cannot perform this action
                details: {}
  "/oauth/token":
    post:
      summary: Get access token
      tags:
      - OAuth
      description: Enter the username (email), password and grant type in order to
        get the access token, which will be necessary to access to the endpoints depending
        on the user role
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: auth
        in: body
        schema:
          type: object
          properties:
            username:
              type: string
            password:
              type: string
            grant_type:
              type: string
              enum:
              - password
          required:
          - username
          - password
          - grant_type
      responses:
        '200':
          description: Get access token
          examples:
            application/json:
              access_token: CznBbJ0hCuvvjDSviHNm7S59pWBfHOoMLeC7pHIjhFM
              token_type: Bearer
              expires_in: 7200
              refresh_token: 27tRl3-JYi2eE7wbVE7AeWaLP5rbnYjLawwjUXOY2X0
              scope: public
              created_at: 1607805660
  "/users/register":
    post:
      summary: Register a user
      tags:
      - Users
      description: On this endpoint a new user can be registered. Once the user is
        registered successfully, use the /oauth/token endpoint to obtain an access
        token
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - first_name
              - last_name
              - email
              - password
      responses:
        '204':
          description: New user created
