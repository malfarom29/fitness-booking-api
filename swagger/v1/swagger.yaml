---
swagger: '2.0'
info:
  title: API V1
  version: v1
basePath: "/api"
paths:
  "/admin/activities":
    post:
      summary: Creates a new activity
      tags:
      - Activities
      description: On this endpoint the admin is able to create a new activity
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: activity
        in: body
        schema:
          type: object
          properties:
            activity:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                mode:
                  type: string
                  enum:
                  - outdoor
                  - indoor
                  - virtual
              required:
              - name
              - mode
      responses:
        '201':
          description: New activity created
          examples:
            application/json:
              data:
                id: 41
                name: foo
                description: bar
                mode: outdoor
        '422':
          description: Missing properties or Invalid Values
          examples:
            application/json:
              error:
                type: Unprocessable entity
                message: Validation failed
                details:
                  name:
                  - can't be blank
    get:
      summary: List of activities
      tags:
      - Activities
      description: Shows a list of activities
      produces:
      - application/json
      responses:
        '200':
          description: List of Activities
          examples:
            application/json:
              data: []
  "/admin/activities/{id}":
    parameters:
    - name: id
      in: path
      type: string
      required: true
    patch:
      summary: Updates an activity
      tags:
      - Activities
      description: It updates requested fields from an specific activity
      consumes:
      - application/json
      parameters:
      - name: activity
        in: body
        schema:
          properties:
            activity:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                mode:
                  type: string
                  enum:
                  - outdoor
                  - indoor
                  - virtual
      responses:
        '200':
          description: Updated
          examples:
            application/json:
              data:
                id: 42
                name: new name
                description: Voluptatibus facilis debitis. Aut voluptatem eum. Sit
                  vel ea.
                mode: indoor
        '404':
          description: Not found
          examples:
            application/json:
              error:
                type: Record not found
                message: Activity with id = 0 wasn't found
                details: {}
    get:
      summary: Get an specific activity
      tags:
      - Activities
      description: Shows an specific activity
      produces:
      - application/json
      responses:
        '200':
          description: Show activity
          examples:
            application/json:
              data:
                id: 44
                name: quaerat
                description: Unde quos voluptates. Aut ipsa eum. Maxime eligendi aut.
                mode: indoor
                created_at: '2020-12-11T23:25:42.218-06:00'
                updated_at: '2020-12-11T23:25:42.218-06:00'
        '404':
          description: Not found
          examples:
            application/json:
              error:
                type: Record not found
                message: Activity with id = 0 wasn't found
                details: {}
  "/admin/schedules":
    post:
      summary: Add a new schedule
      tags:
      - Schedules
      description: Add a schedule available for activities. This schedules may have
        many activities. For example, from 8AM to 10AM can be scheduled a swimming
        session and a boxing session
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: schedule
        in: body
        schema:
          type: object
          properties:
            begin_at:
              type: string
              format: date-time
            finish_at:
              type: string
              format: date-time
          required:
          - begin_at
          - finish_at
      responses:
        '200':
          description: Create a new schedule
          examples:
            application/json:
              data:
                id: 6
                begin_at: '2020-12-12T00:25:41.000-06:00'
                finish_at: '2020-12-12T02:25:41.000-06:00'
        '422':
          description: Invalid values
          examples:
            application/json:
              error:
                type: Unprocessable entity
                message: Validation failed
                details:
                  begin_at:
                  - must be greater than actual date
  "/oauth/token":
    post:
      summary: Get access token
      tags:
      - OAuth
      description: Enter the username (email), password and grant type in order to
        get the access token, which will be necessary to access to the endpoints depending
        on the user role
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: auth
        in: body
        schema:
          type: object
          properties:
            username:
              type: string
            password:
              type: string
            grant_type:
              type: string
              enum:
              - password
          required:
          - username
          - password
          - grant_type
      responses:
        '200':
          description: Get access token
          examples:
            application/json:
              access_token: oLhRggiuxa0kF0HAJr0iHPAVs5I8ceTvfrujQRX0VaI
              token_type: Bearer
              expires_in: 7200
              refresh_token: eT-xZ1srnk-mLbTgcbfidAyrnVgt7TuzlcLzwaZYSHo
              scope: public
              created_at: 1607750742
  "/users/register":
    post:
      summary: Register a user
      tags:
      - Users
      description: On this endpoint a new user can be registered. Once the user is
        registered successfully, use the /oauth/token endpoint to obtain an access
        token
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - first_name
              - last_name
              - email
              - password
      responses:
        '204':
          description: New user created
